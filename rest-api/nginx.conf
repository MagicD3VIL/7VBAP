worker_processes ${{NUM_WORKERS}};
error_log stderr notice;
#error_log stderr error;
daemon off;
pid logs/nginx.pid;

events {
  worker_connections 1024;
}

http {
  include mime.types;
  lua_shared_dict auto_ssl 10m;
  lua_shared_dict auto_ssl_settings 64k;
  lua_shared_dict sessions 10m;
  lua_shared_dict sessions_locks 10m;
  large_client_header_buffers 4 16k;
  ssl_session_tickets off;
  ssl_session_cache shared:SSL:100m;
  ssl_session_timeout 60m;
  resolver 9.9.9.9 ipv6=off;
  
  init_by_lua_block {
    auto_ssl = (require "resty.auto-ssl").new()

    auto_ssl:set("allow_domain", function(domain)
      return true
    end)
	
    auto_ssl:set("dir", "/var/lapis/etc/resty-auto-ssl")

    auto_ssl:init()
  }

  init_worker_by_lua_block {
    auto_ssl:init_worker()
  }

  # HTTPS server
  server {
    listen ${{PORT}} ssl;
    lua_code_cache ${{CODE_CACHE}};
    
    charset utf-8;
    charset_types application/json;
    default_type application/json;
	
    ssl_certificate_by_lua_block {
      auto_ssl:ssl_certificate()
    }
	
	# You must still define a static ssl_certificate file for nginx to start.
    #
    # You may generate a self-signed fallback with:
    #
    # openssl req -new -newkey rsa:2048 -days 3650 -nodes -x509 \
    #   -subj '/CN=sni-support-required-for-valid-ssl' \
    #   -keyout /var/lapis/etc/ssl/resty-auto-ssl-fallback.key \
    #   -out /var/lapis/etc/ssl/resty-auto-ssl-fallback.crt
    ssl_certificate /var/lapis/etc/ssl/resty-auto-ssl-fallback.crt;
    ssl_certificate_key /var/lapis/etc/ssl/resty-auto-ssl-fallback.key;

    location / {
      content_by_lua_block {
        require("lapis").serve("src.app")
      }
    }
    
    location /.well-known/acme-challenge/ {
      content_by_lua_block {
        auto_ssl:challenge_server()
      }
    }
  }
  
  # Internal server running on port 6999 for handling certificate tasks.
  server {
    listen 127.0.0.1:6688;

    # Increase the body buffer size, to ensure the internal POSTs can always
    # parse the full POST contents into memory.
    client_body_buffer_size 128k;
    client_max_body_size 128k;

    location / {
      content_by_lua_block {
        auto_ssl:hook_server()
      }
    }
  }
}
